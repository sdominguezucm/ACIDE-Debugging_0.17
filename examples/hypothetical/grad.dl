% Hypothetical Queries
% Source: [Bonn99], extended and adapted
% Coded by: F. Sáenz-Pérez
% Date: 1/15/2013

:-type(student(name: string)), type(take(name: string, title: string)), type(course(title: string)), type(grad(name: string)).

student(adam).
student(bob).
student(pete).
student(scott).
student(tony).

course(eng).
course(his).
course(lp).

take(adam,eng).
take(pete,his).
take(pete,eng).
take(scott,his).
take(scott,lp).
take(tony,his).

pre(eng,lp).
pre(hist,eng).
pre(Pre,Post) :-
  pre(Pre,X),
  pre(X,Post).

grad(S) :-
  take(S,his), 
  take(S,eng).
 
% Possible queries: 
% grad(S).
% take(tony,eng) => grad(tony)
% take(tony,eng) /\ take(adam,his) => grad(S)
% (grad(S) :- take(S,his), take(S,lp)) => grad(S)
% pre(lp,hist)=>pre(X,X)
% -take(pete,eng) => grad(pete)
% (-pre(Pre,Post) :- pre(Pre,X), pre(X,Post)) /\ (pre(Pre,Post) :- pre(Post,X), pre(X,Pre)) => pre(Pre,Post)
% (-pre(Pre,Post) :- pre(Post,X), pre(X,Pre)) => pre(Pre,Post)     
% pre(X,X).
